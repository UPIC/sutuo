<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.upic.dao.impl.StoreCollectionDao">

	<!-- 用户信息表 -->
	<sql id="storeCollection"> T_COLLECTION </sql>
	<sql id="store"> T_STORE </sql>
	<resultMap id="beanMap" type="StoreCollection">
		<id column="COLLECTION_ID" property="id" />
		<result column="VERSION" property="version" />
		<result column="CREATETIME" property="createTime" />
		<result column="ID" property="storeId" />
		<result column="T_USER_ID" property="userId" />
		<result column="STORE_NUMBER" property="storeNumber" />
		<result column="STORENAME" property="storeName" />
		<result column="AVG_COST" property="avgCost" />
		<result column="HEAD_PIC" property="pic" />
		<result column="STATUS" property="sStatus" />
		<result column="TYPE" property="type" />
		<result column="FIELD1" property="field1" />
		<result column="FIELD2" property="field2" />
		<result column="FIELD3" property="field3" />
		<result column="FIELD4" property="field4" />
		<result column="FIELD5" property="field5" />
	</resultMap>

	<insert id="insert" parameterType="StoreCollection" keyProperty="id"
		useGeneratedKeys="true">
		insert into
		<include refid="storeCollection" />
		(VERSION, CREATETIME,STORE_NUMBER,STORENAME,AVG_COST,
		HEAD_PIC,STATUS,FIELD1,FIELD2,FIELD3,FIELD4,FIELD5,
		ID,
		T_USER_ID,
		TYPE)
		values (0,
		NOW(),#{storeNumber},#{storeName},#{avgCost},#{pic},#{sStatus},#{field1},#{field2},#{field3},#{field4},#{field5},#{storeId},#{userId},#{type})
	</insert>

	<update id="update" parameterType="StoreCollection">
		update
		<include refid="storeCollection" />
		<set>
			VERSION = #{version}+1,
			FIELD1=#{field1},
			FIELD2=#{field2},
			FIELD3=#{field3},
			FIELD4=#{field4},
			FIELD5=#{field5},
			ID=#{storeId},
			T_USER_ID=#{userId},
			STORE_NUMBER=#{shopNumber},
			STORENAME=#{shopName},
			AVG_COST=#{price},
			HEAD_PIC=#{pic},
			STATUS=#{sStatus},
			TYPE=#{type}
		</set>
		<where>
			COLLECTION_ID = #{id} and VERSION = #{version}
		</where>
	</update>
	<select id="getById" parameterType="long" resultMap="beanMap">
		select * from
		<include refid="storeCollection" />
		where COLLECTION_ID = #{id}
	</select>
	<select id="listAll" resultMap="beanMap">
		select * from
		<include refid="storeCollection" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by COLLECTION_ID
	</select>

	<select id="findObjectByStoreId" resultMap="beanMap">
		select * from
		<include refid="storeCollection" />
		a,
		<include refid="store" />
		b
		<where>
			and a.ID = b.STORE_ID
			and a.T_USER_ID=#{userId}
		</where>
		order by CREATETIME desc
	</select>

	<delete id="deleteById" parameterType="long">
		delete from
		<include refid="storeCollection" />
		where COLLECTION_ID = #{id}
	</delete>

	<sql id="condition_sql">
		<if test="storeNumber != null and storeNumber != '' ">and STORE_NUMBER=#{storeNumber} </if>
		<if test="userId != null and userId != '' ">and T_USER_ID=#{userId} </if>
	</sql>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="storeCollection" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by COLLECTION_ID desc
	</select>

	<select id="listPageCount" parameterType="java.util.Map"
		resultType="long">
		select count(1) from
		<include refid="storeCollection" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	<delete id="deleteByCondi" parameterType="long">
		delete from
		<include refid="storeCollection" />
		where STORE_NUMBER = #{someID}
		and T_USER_ID=#{userId}
	</delete>
</mapper>