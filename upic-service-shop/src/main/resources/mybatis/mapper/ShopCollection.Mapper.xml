<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.upic.dao.impl.ShopCollectionDao">

	<!-- 用户信息表 -->
	<sql id="shopCollection"> T_COLLECTION </sql>
	<sql id="shop"> T_SHOP </sql>
	<resultMap id="beanMap" type="ShopCollection">
		<id column="COLLECTION_ID" property="id" />
		<result column="VERSION" property="version" />
		<result column="CREATETIME" property="createTime" />
		<result column="ID" property="shopId" />
		<result column="USER_ID" property="userId" />
		<result column="SHOP_NUMBER" property="shopNumber" />
		<result column="SHOP_NAME" property="shopName" />
		<result column="SHOP_PRICE" property="price" />
		<result column="HEAD_PIC" property="pic" />
		<result column="STATUS" property="sStatus" />
		<result column="FIELD1" property="field1" />
		<result column="FIELD2" property="field2" />
		<result column="FIELD3" property="field3" />
		<result column="FIELD4" property="field4" />
		<result column="FIELD5" property="field5" />
	</resultMap>

	<insert id="insert" parameterType="ShopCollection" keyProperty="id"
		useGeneratedKeys="true">
		insert into
		<include refid="shopCollection" />
		(VERSION, CREATETIME,SHOP_NUMBER,SHOP_NAME,SHOP_PRICE,
		HEAD_PIC,STATUS,FIELD1,FIELD2,FIELD3,FIELD4,FIELD5,
		ID,
		USER_ID)
		values
		(0,
		NOW(),#{shopNumber},#{shopName},#{price},#{pic},#{sStatus},#{field1},#{field2},#{field3},#{field4},#{field5},#{shopId},#{userId})
	</insert>

	<update id="update" parameterType="ShopCollection">
		update
		<include refid="shopCollection" />
		<set>
			VERSION = #{version}+1,
			FIELD1=#{field1},
			FIELD2=#{field2},
			FIELD3=#{field3},
			FIELD4=#{field4},
			FIELD5=#{field5},
			T_SHOP_ID=#{shopId},
			USER_ID=#{userId},
			SHOP_NUMBER=#{shopNumber},
			SHOP_NAME=#{shopName},
			SHOP_PRICE=#{price},
			HEAD_PIC=#{pic},
			STATUS=#{sStatus}
		</set>
		<where>
			COLLECTION_ID = #{id} and VERSION = #{version}
		</where>
	</update>
	<select id="getById" parameterType="long" resultMap="beanMap">
		select * from
		<include refid="shopCollection" />
		where COLLECTION_ID = #{id}
	</select>
	<select id="listAll" resultMap="beanMap">
		select * from
		<include refid="shopCollection" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by COLLECTION_ID
	</select>

	<select id="findObjectByShopId" resultMap="beanMap">
		select * from
		<include refid="shopCollection" />
		<where>
			and USER_ID = #{userId}
		</where>
		order by CREATETIME desc
	</select>
	<!-- <select id="findObjectByShopId" resultMap="beanMap"> -->
	<!-- select * from -->
	<!-- <include refid="shopCollection" /> -->
	<!-- a, -->
	<!-- <include refid="shop" /> -->
	<!-- b -->
	<!-- <where> -->
	<!-- and a.ID = b.SHOP_ID -->
	<!-- and a.USER_ID=#{userId} -->
	<!-- </where> -->
	<!-- order by a.CREATETIME desc -->
	<!-- </select> -->
	<delete id="deleteById" parameterType="long">
		delete from
		<include refid="shopCollection" />
		where USER_ID = #{id}
	</delete>
	<delete id="deleteByCondi" parameterType="long">
		delete from
		<include refid="shopCollection" />
		where ID = #{someID}
		and USER_ID = #{userId}
	</delete>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="shopCollection" />
		<where>
			<include refid="condition_sql" />
		</where>
		order by COLLECTION_ID desc
	</select>

	<select id="listPageCount" parameterType="java.util.Map"
		resultType="long">
		select count(1) from
		<include refid="shopCollection" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="shopId != null and shopId != ''"> and ID
			= #{shopId}
		</if>
		<if test="userId != null and userId != ''"> and USER_ID
			= #{userId}
		</if>
	</sql>
</mapper>